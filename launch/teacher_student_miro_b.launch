<launch>
	<!-- Global params -->
	<!--<rosparam param="data_load_dir">~/miro/data/test1</rosparam>-->
	<rosparam param="data_save_dir">~/miro/data/trial_repeat/test1</rosparam>
	<rosparam param="wait_for_ready">true</rosparam>
	<rosparam param="image_resize_width">115</rosparam>
	<rosparam param="image_resize_height">44</rosparam>
	<rosparam param="image_subsampling">1</rosparam>
	<rosparam param="image_field_of_view_width_deg">140</rosparam>
	<rosparam param="patch_size">(9,9)</rosparam>
	<rosparam param="image_recognition_threshold">0.01</rosparam>
	<rosparam param="calibration_file_left" subst_value="True">$(find teach_repeat)/calibration/left_240.yaml</rosparam>
	<rosparam param="calibration_file_right" subst_value="True">$(find teach_repeat)/calibration/right_240.yaml</rosparam>
	<rosparam param="goal_pose_separation">0.2</rosparam>
	<rosparam param="lookahead_distance_ratio">0.65</rosparam>
	<rosparam param="turning_target_range_distance_ratio">0.5</rosparam>
	<rosparam param="goal_theta_tolerance">30</rosparam>
	<rosparam param="save_full_res_images">true</rosparam>
	<rosparam param="save_full_res_images_at_goal">true</rosparam>
	<rosparam param="save_gt_data">false</rosparam>
	<rosparam param="publish_gt_goals">false</rosparam>

	<group ns="/miro/teacher">
		<!-- Hold head in place and reset odometry -->
		<node pkg="teach_repeat" type="miro_setup.py" name="miro_setup" output="screen">
			<rosparam param="lift">30</rosparam>
			<!--<rosparam param="yaw">-15</rosparam> Miro1 Have issue with yaw-->
			<rosparam param="yaw">-15</rosparam>
			<rosparam param="pitch">0</rosparam>
			<rosparam param="reset_odom">true</rosparam>
			<rosparam param="disable_cliff_sensors">true</rosparam>
			<rosparam param="trigger_services">ready_data_save,ready_data_collect,ready_teleop</rosparam>

			<remap from='/miro/sensors/odom/reset' to='sensors/odom/reset' />
			<remap from='/miro/control/kinematic_joints/set_fixed_state' to='control/kinematic_joints/set_fixed_state' />
			<remap from='/miro/control/kinematic_joints/fixed/enable' to='control/kinematic_joints/fixed/enable' />
			<remap from='/miro/control/kinematic_joints/fixed/disable' to='control/kinematic_joints/fixed/disable' />
			<remap from="/miro/control/kinematic_joints/at_set_point" to="control/kinematic_joints/at_set_point" />
		</node>

		<!-- Teleop to control Miro -->
		<arg name="speed_lin" value="2.0" />
		<arg name="speed_ang" value="1.0" />
		<!--<include file="$(find teach_repeat)/launch/teleop.launch">
			<arg name="cmd_vel_topic" value="rob01/control/cmd_vel" />
			<arg name="speed_linear" value="$(arg speed_lin)" />
			<arg name="speed_angular" value="$(arg speed_ang)" />
		</include> -->
		<include file="$(find teach_repeat)/launch/teleop_joy_miro_b.launch">
			<arg name="cmd_vel_topic" value="control/cmd_vel" />
			<arg name="speed_linear" value="$(arg speed_lin)" />
			<arg name="speed_angular" value="$(arg speed_ang)" />
			<arg name="wait_for_ready" value="true" />
		</include>

		<!-- Stitch image files for matching -->
		<node pkg="teach_repeat" type="image_stitcher.py" name="image_stitcher" output="screen">
			<rosparam param="half_field_of_view">45</rosparam>
			<rosparam param="half_camera_offset">27</rosparam>
			<rosparam param="extra_pixels_proportion">0.2</rosparam>
			<rosparam param="blank_pixels_proportion">0.2</rosparam>
		</node>

		<!-- Collect image data and append (now only exist in teacher robot file below) -->
		<node pkg="teach_repeat" type="data_collect.py" name="data_collect" output="screen">
			<remap from="odom" to="sensors/odom/integrated" />
			<remap from="image" to="sensors/cam/both" />
			<rosparam param="distance_threshold">0.2</rosparam>
			<rosparam param="angle_threshold_deg">15.0</rosparam>
		</node>

		<!-- Save Images and pose in a directory -->
		<node pkg="teach_repeat" type="data_pub_save.py" name="data_save" output="screen">
			<rosparam param="save_dir">~/miro/data</rosparam>
			<rosparam param="timestamp_folder">true</rosparam>
		</node>
	</group>

	<group ns="/miro/student">
		<!-- Hold head in place, reset odometry and disable cliff sensors -->
		<node pkg="teach_repeat" type="miro_setup.py" name="miro_setup" output="screen">
			<rosparam param="lift">30</rosparam>
			<rosparam param="yaw">10</rosparam>
			<rosparam param="pitch">0</rosparam>
			<rosparam param="reset_odom">true</rosparam>
			<rosparam param="disable_cliff_sensors">true</rosparam>
			<rosparam param="trigger_services">ready_localiser,ready_controller</rosparam>

			<remap from='/miro/sensors/odom/reset' to='sensors/odom/reset' />
			<remap from='/miro/control/kinematic_joints/set_fixed_state' to='control/kinematic_joints/set_fixed_state' />
			<remap from='/miro/control/kinematic_joints/fixed/enable' to='control/kinematic_joints/fixed/enable' />
			<remap from='/miro/control/kinematic_joints/fixed/disable' to='control/kinematic_joints/fixed/disable' />
			<remap from='/miro/control/kinematic_joints/at_set_point' to='control/kinematic_joints/at_set_point' />
		</node>

		<!-- Load image files for matching -->
		<node pkg="teach_repeat" type="image_sub_matcher.py" name="image_matcher" output="screen" >
			<remap from="teacher_full_img" to="/miro/teacher/teacher_full_img" />
			<remap from="teacher_norm_img" to="/miro/teacher/teacher_norm_img" />
			<rosparam param="use_old_dataset_format">false</rosparam>
			<rosparam param="use_depth">false</rosparam>
			<rosparam param="use_middle_weighting">false</rosparam>
		</node>

		<!-- Stitch image files for matching -->
		<node pkg="teach_repeat" type="image_stitcher.py" name="image_stitcher" output="screen">
			<rosparam param="half_field_of_view">45</rosparam>
			<rosparam param="half_camera_offset">27</rosparam>
			<rosparam param="extra_pixels_proportion">0.2</rosparam>
			<rosparam param="blank_pixels_proportion">0.2</rosparam>
		</node>

		<!-- Follow the previous poses using odometry, but use images to correct for odometry drift -->
		<node pkg="teach_repeat" type="student_localiser.py" name="localiser" output="screen" >
			<remap from="teacher_pose" to="/miro/teacher/teacher_odom_pose" />
			<remap from="odom" to="sensors/odom/integrated" />
			<remap from="image" to="sensors/cam/both" />
			<rosparam param="rotation_correction_gain">0.1</rosparam>
			<rosparam param="path_correction_gain">0.001</rosparam>
			<rosparam param="stop_at_end">true</rosparam>
			<rosparam param="discrete-correction">false</rosparam>
			<rosparam param="search-range">3</rosparam>
			<rosparam param="global_localisation_init">true</rosparam>
		</node>

		<!-- Drive to goal pose -->
		<node pkg="teach_repeat" type="drive_to_pose_controller.py" name="drive_to_pose" output="screen" >
			<remap from="cmd_vel" to="control/cmd_vel" />
			<remap from="odom" to="sensors/odom/integrated" />
			<rosparam param="min_omega">0.5</rosparam>
			<rosparam param="max_omega">1.0</rosparam>
			<rosparam param="max_v">0.2</rosparam>
		</node>
		<!-- Convert Twist commands to TwistStamped -->
		<!--
		<node pkg="teach_repeat" type="twist_stamper.py" name="teleop_stamper">
			<remap from="cmd_vel_unstamped" to="control/cmd_vel_unstamped" />
			<remap from="cmd_vel" to="control/cmd_vel" />
		</node> -->

		<!-- Show image matching -->
		<node pkg="image_view" type="image_view" name="image_match_debug_view" output="screen">
			<remap from="image" to="match_image_debug" />
		</node>
	</group>
</launch>
